1. Create a repository and push to github.
- Login to GitHub and create a new repository

2. Create two files in master branch, then create a tag 1.0.0 for first release from master.
- Files created with using command (touch file_1.txt) (touch file_2.txt)
- Files Added using command (git add .)
- git commit using (git commit -m "version 1.0.0") below message shown
- [master (root-commit) 87cbb84] version 1.0.0
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 file_1.txt
 create mode 100644 file_2.txt
- Used command (git tag 1.0.0)

3. Now, perform some changes in previous files and create another tag 1.0.1.
- File added used (git add .)
- git commit using (git commit -m "version 1.0.1") below message shown
- [master fae431e] version 1.0.1
 2 files changed, 2 insertions(+)
- Used command (git tag 1.0.1)

4. Now, create another file file3 and create a tag 1.1.0.
- Files created with using command (touch file3.txt)
- Files Added using command (git add .)
- git commit using (git commit -m "version 1.1.0")
- Used command (git tag 1.1.0)

5. Now in 1.0.1 release, do some changes in existing files and create another tag 1.0.2.
- Used Command (git checkout 1.0.1) below message shown
- Note: switching to '1.0.1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at fae431e version 1.0.1

- File added using (git add .)
- File commit using (git commit -m "version 1.0.2")
- Used command (git tag 1.0.2)

6. Also do some changes in release 1.1.0, create a tag for next release 1.1.1.
- Used Command (git checkout 1.1.0) to enter in existing tag (below message shown)
- Previous HEAD position was e15a2b1 version 1.0.2
HEAD is now at d8cc9ba version 1.1.0

- Files added used command (git add .)
- git commit using (git commit -m "version 1.1.1") below message shown
 [detached HEAD b36c19c] version 1.1.1
 1 file changed, 1 insertion(+)
-Used command (git tag 1.1.1)


Note: Tags should have clear description and all tags should be pushed to github.

- Used (git remote add origin https://github.com/Sandeepbidla/git-tag.git)
- For Pushed to gitHub repository using ( git push -u origin master)
For all tags are pushed to gitHub using command ( git push --tag )